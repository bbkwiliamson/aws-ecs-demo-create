AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  Team:
    Type: String
    Description: the name of the team
    Default: brian-DevOps

  TeamEmail:
    Type: String
    Description: team e-mail address
    Default: example@example.com

  Env:
    Type: String
    Default: dev
    Description: Environment the resources/ stack is deployed to
    AllowedValues:
      - "dev"
      - "sit"
      - "prod"


Resources:
  # ECSAutoScaleGroup:
  #   Type: AWS::ECS::......
  # ECSPOCCapacityProvider:
  #   Type: AWS::ECS::CapacityProvider
  #   Properties:
  #     AutoScalingGroupProvider:
  #       AutoScalingGroupArn: 
  #     Name: ecs-poc-capacity-bbk
  #     Tags:
  #       - Key: NAME
  #         Value: ECS-POC-CAPACITY-BBK
  #       - Key: Environment
  #         Value: !Ref Env
  #       - Key: EMAIL
  #         Value: !Ref TeamEmail
  #       - Key: TEAM
  #         Value: !Ref Team


  ECSPocAutoLaunch:
    cExampleCluster:
      Type: AWS::ECS::Cluster
      Properties:
        ClusterName: example-cluster-poc
        ClusterSettings:
          - Name: containerInsights
            Value: enabled
    
  BoundedECSTaskRole: #creation of ecs task role
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: "bounded-ecs-task-role-poc-execution"
      #PermissionsBoundary: !Sub "arn:aws:iam::${AWS::AccountId}:policy/BoundedPermissionsPolicy"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
               
            Action:
              - 'sts:AssumeRole'
      Path: "/bounded/"
      Policies:
        - PolicyName: "bounded-ecs-task-role-poc-execution-policy"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 
                 - "*" 
                Resource: "*"

  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Image: nginx:latest
          Name: poc-container-bbk
          Memory: 2048
          PortMappings:
            - ContainerPort: 80
            - ContainerPort: 443
          
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - "FARGATE"
      Cpu: 1024
      Family: poc-task-family-version-bbk
      Memory: 2048
      # TaskRoleArn: !Ref BoundedECSTaskRole
      # ExecutionRoleArn: 
    
      RuntimePlatform:
        CpuArchitecture: X86_64
        OperatingSystemFamily: LINUX
      Tags:
        - Key: NAME
          Value: ECS-POC-CAPACITY-BBK
        - Key: Environment
          Value: !Ref Env
        - Key: EMAIL
          Value: !Ref TeamEmail
        - Key: TEAM
          Value: !Ref Team
  
  MyALBSecurityGroupService:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: security group for ECS Service
      VpcId:  your vpc id (that goes together with the subnets)
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: '0.0.0.0/0'



#if you want to increase/decrease your tasks on schedule, below is an example of how to do it
  #ECSScheduledTaskRule:
  #  Type: AWS::Events::Rule
  #  Properties:
   #   ScheduleExpression: "cron(0 5 25 * ? *)"
   #   State: ENABLED
   #   Targets:
   #     - Id: "ScheduledTaskTarget"
   #       Arn: !GetAtt ECSPocSERVICE.Arn
    #      EcsParameters:
    #        TaskDefinitionArn: !Ref ECSTaskDefinition
    #        LaunchType: FARGATE
    #        NetworkConfiguration:
    #          AwsVpcConfiguration:
    #            Subnets:
    #              -  Specify your subnet ID
    #              -  Specify your subnet ID
     #           SecurityGroups:
     #             - Specify your security group ID
     #           AssignPublicIp: ENABLED

  ECSServiceScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 10
      MinCapacity: 1
      ResourceId: !Sub "service/${ECSPocAutoLaunch.ClusterName}/ECSPocSERVICE.ServiceName}"
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
      Tags:
        - Key: NAME
          Value: ECS-POC-CAPACITY-BBK
        - Key: Environment
          Value: !Ref Env
        - Key: EMAIL
          Value: !Ref TeamEmail
        - Key: TEAM
          Value: !Ref Team

  ECSServiceScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: ecs-service-scaling-policy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref ECSServiceScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageCPUUtilization
        ScaleInCooldown: 300
        ScaleOutCooldown: 300
        TargetValue: 60.0
      Tags:
        - Key: NAME
          Value: ECS-POC-CAPACITY-BBK
        - Key: Environment
          Value: !Ref Env
        - Key: EMAIL
          Value: !Ref TeamEmail
        - Key: TEAM
          Value: !Ref Team


  ECSPocSERVICE:
    Type: AWS::ECS::Service
    Properties:
      PlatformVersion: LATEST
      Cluster: !Ref ECSPocAutoLaunch
      DesiredCount: 2
      EnableExecuteCommand: true
      LaunchType: FARGATE
      DeploymentController:
        Type: ECS
      DeploymentConfiguration:
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
        MinimumHealthyPercent: 100
        MaximumPercent: 200
        
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref MyALBSecurityGroupService
          Subnets:
            - your subnet id
            - your subnet id
      PropagateTags: TASK_DEFINITION  # SERVICE
      EnableECSManagedTags: true
      ServiceName: poc-auto-service-bbk # the stack update fails if this is set and any properties that change and need replacement of the resource
      TaskDefinition: !Ref ECSTaskDefinition
      Tags:
        - Key: NAME
          Value: ECS-POC-CAPACITY-BBK
        - Key: Environment
          Value: !Ref Env
        - Key: EMAIL
          Value: !Ref TeamEmail
        - Key: TEAM
          Value: !Ref Team
